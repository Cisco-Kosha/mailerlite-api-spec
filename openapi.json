{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "support@mailerlite.com"
    },
    "description": "",
    "termsOfService": "https://mailterlite.com",
    "title": "Mailterlite API V2",
    "version": "1.0.6"
  },
  "paths": {
    "/api/subscribers": {
      "get": {
        "parameters": [
          {
            "description": "The maximum number of records returned. Default 25. Provide value as 0 to fetch total subscribers count.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Defaults to first page. Cursor value available in response body.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Must be one of the possible statuses",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "enum": [
                "active",
                "unsubscribed",
                "unconfirmed",
                "bounced",
                "junk"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAllSubscribers"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "There was an error when processing your request. Please adjust your request based on the endpoint requirements and try again."
          },
          "401": {
            "description": "The provided API token is invalid."
          },
          "403": {
            "description": "The action is denied for that account or a particular API token."
          },
          "422": {
            "description": "There was a validation error found when processing the request. Please adjust it based on the endpoint requirements and try again."
          }
        },
        "tags": [
          "subscribers"
        ],
        "description": "list all of your subscribers",
        "operationId": "list_all_subscribers",
        "summary": "list all of your subscribers"
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser"
              }
            }
          }
        },
        "tags": [
          "subscribers"
        ],
        "summary": "Create new subscriber",
        "description": "Create new user",
        "operationId": "create user",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "There was an error when processing your request. Please adjust your request based on the endpoint requirements and try again."
          },
          "401": {
            "description": "The provided API token is invalid."
          },
          "403": {
            "description": "The action is denied for that account or a particular API token."
          },
          "422": {
            "description": "There was a validation error found when processing the request. Please adjust it based on the endpoint requirements and try again."
          }
        }
      }
    },
    "/api/subscribers/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Must provide either valid subscriber id or email",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscriber"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "There was an error when processing your request. Please adjust your request based on the endpoint requirements and try again."
          },
          "401": {
            "description": "The provided API token is invalid."
          },
          "403": {
            "description": "The action is denied for that account or a particular API token."
          },
          "422": {
            "description": "There was a validation error found when processing the request. Please adjust it based on the endpoint requirements and try again."
          }
        },
        "tags": [
          "subscribers"
        ],
        "description": "list single subscriber",
        "operationId": "list_single_subscribers",
        "summary": "list single subscribers"
      },
      "delete": {
        "parameters": [
          {
            "description": "Must provide valid subscriber id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "There was an error when processing your request. Please adjust your request based on the endpoint requirements and try again."
          },
          "401": {
            "description": "The provided API token is invalid."
          },
          "403": {
            "description": "The action is denied for that account or a particular API token."
          },
          "422": {
            "description": "There was a validation error found when processing the request. Please adjust it based on the endpoint requirements and try again."
          }
        },
        "tags": [
          "subscribers"
        ],
        "description": "delete single subscriber",
        "operationId": "delete_single_subscriber",
        "summary": "delete single subscribers"
      }
    },
    "/api/groups": {
      "get": {
        "parameters": [
          {
            "description": "The maximum number of records returned. Default 25. Provide value as 0 to fetch total subscribers count.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Defaults to first page. Cursor value available in response body.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Must be one of the possible statuses",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "enum": [
                "active",
                "unsubscribed",
                "unconfirmed",
                "bounced",
                "junk"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAllSubscribers"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "There was an error when processing your request. Please adjust your request based on the endpoint requirements and try again."
          },
          "401": {
            "description": "The provided API token is invalid."
          },
          "403": {
            "description": "The action is denied for that account or a particular API token."
          },
          "422": {
            "description": "There was a validation error found when processing the request. Please adjust it based on the endpoint requirements and try again."
          }
        },
        "tags": [
          "groups"
        ],
        "description": "list all of your groups",
        "operationId": "list_all_groups",
        "summary": "list all of your groups"
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroup"
              }
            }
          }
        },
        "tags": [
          "groups"
        ],
        "summary": "Create new group",
        "description": "Create new user",
        "operationId": "create group",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAllSubscribers"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "There was an error when processing your request. Please adjust your request based on the endpoint requirements and try again."
          },
          "401": {
            "description": "The provided API token is invalid."
          },
          "403": {
            "description": "The action is denied for that account or a particular API token."
          },
          "422": {
            "description": "There was a validation error found when processing the request. Please adjust it based on the endpoint requirements and try again."
          }
        }
      }
    },
    "/api/groups/{group_id}": {
      "delete": {
        "parameters": [
          {
            "description": "Must provide valid group id",
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "There was an error when processing your request. Please adjust your request based on the endpoint requirements and try again."
          },
          "401": {
            "description": "The provided API token is invalid."
          },
          "403": {
            "description": "The action is denied for that account or a particular API token."
          },
          "422": {
            "description": "There was a validation error found when processing the request. Please adjust it based on the endpoint requirements and try again."
          }
        },
        "tags": [
          "groups"
        ],
        "description": "delete single group",
        "operationId": "delete_single_group",
        "summary": "delete single group"
      }
    },
    "/api/segments": {
      "get": {
        "parameters": [
          {
            "description": "An account can have at most a 250 segments",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Defaults to first page.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAllSegments"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "There was an error when processing your request. Please adjust your request based on the endpoint requirements and try again."
          },
          "401": {
            "description": "The provided API token is invalid."
          },
          "403": {
            "description": "The action is denied for that account or a particular API token."
          },
          "422": {
            "description": "There was a validation error found when processing the request. Please adjust it based on the endpoint requirements and try again."
          }
        },
        "tags": [
          "segments"
        ],
        "description": "list all of your segmnets",
        "operationId": "list_all_segments",
        "summary": "list all of your segments"
      }
    },
    "/api/segments/{segment_id}/subscribers": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "segment_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Must be one of the possible statuses: active, unsubscribed, unconfirmed, bounced or junk. Defaults to active.",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The last subscriber id, available in meta.last",
            "in": "query",
            "name": "after",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAllSegments"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "There was an error when processing your request. Please adjust your request based on the endpoint requirements and try again."
          },
          "401": {
            "description": "The provided API token is invalid."
          },
          "403": {
            "description": "The action is denied for that account or a particular API token."
          },
          "422": {
            "description": "There was a validation error found when processing the request. Please adjust it based on the endpoint requirements and try again."
          }
        },
        "tags": [
          "segments"
        ],
        "description": "list all of your subscribers belonging to a segment",
        "operationId": "list_all_subscribers_in_a_segment",
        "summary": "list all of your subscribers belonging to a segment"
      }
    },
  },
  "components": {
    "schemas": {
      "CreateGroup": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "active_count": {
                "type": "integer"
              },
              "sent_count": {
                "type": "integer"
              },
              "opens_count": {
                "type": "integer"
              },
              "open_rate": {
                "type": "object",
                "properties": {
                  "float": {
                    "type": "integer"
                  },
                  "string": {
                    "type": "string"
                  }
                },
                "required": [
                  "float",
                  "string"
                ]
              },
              "clicks_count": {
                "type": "integer"
              },
              "click_rate": {
                "type": "object",
                "properties": {
                  "float": {
                    "type": "integer"
                  },
                  "string": {
                    "type": "string"
                  }
                },
                "required": [
                  "float",
                  "string"
                ]
              },
              "unsubscribed_count": {
                "type": "integer"
              },
              "unconfirmed_count": {
                "type": "integer"
              },
              "bounced_count": {
                "type": "integer"
              },
              "junk_count": {
                "type": "integer"
              },
              "created_at": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "active_count",
              "sent_count",
              "opens_count",
              "open_rate",
              "clicks_count",
              "click_rate",
              "unsubscribed_count",
              "unconfirmed_count",
              "bounced_count",
              "junk_count",
              "created_at"
            ]
          }
        }
      },
      "CreateUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "fields": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              }
            }
          },
          "groups": {
            "type": "object"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "Subscriber": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "sent": {
            "type": "integer"
          },
          "opens_count": {
            "type": "integer"
          },
          "clicks_count": {
            "type": "integer"
          },
          "open_rate": {
            "type": "integer"
          },
          "click_rate": {
            "type": "integer"
          },
          "ip_address": {
            "type": "string"
          },
          "subscribed_at": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "fields": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              },
              "company": {
                "type": "string"
              },
              "county": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "z_i_p": {
                "type": "string"
              }
            }
          }
        }
      },
      "ListAllSubscribers": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "properties": {
                "schema": {
                  "$ref": "#/components/schemas/Subscriber"
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "prev": {
                "type": "string"
              },
              "next": {
                "type": "string"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string"
              },
              "per_page": {
                "type": "string"
              },
              "next_cursor": {
                "type": "string"
              },
              "prev_cursor": {
                "type": "string"
              }
            }
          }
        }
      },
      "ListAllSegments": {
        "type": "object",
                "additionalProperties": true,
        "properties": {
          "data": {
            "type": "array",
            "items": {
                "additionalProperties": true,
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "open_rate": {
                    "type": "object",
                    "properties": {
                      "float": {
                        "type": "integer"
                      },
                      "string": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "float",
                      "string"
                    ]
                  },
                  "click_rate": {
                    "type": "object",
                    "properties": {
                      "float": {
                        "type": "integer"
                      },
                      "string": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "float",
                      "string"
                    ]
                  },
                  "created_at": {
                    "type": "string"
                  }
                }
              }
            },
          "links": {
            "type": "object",
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "prev": {
                "type": "string"
              },
              "next": {
                "type": "string"
              }
            },
            "required": [
              "first",
              "last",
              "prev",
              "next"
            ]
          },
          "meta": {
            "type": "object",
            "properties": {
              "current_page": {
                "type": "integer"
              },
              "from": {
                "type": "integer"
              },
              "last_page": {
                "type": "integer"
              },
              "links": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "active": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "url",
                      "label",
                      "active"
                    ]
                  }
              },
              "path": {
                "type": "string"
              },
              "per_page": {
                "type": "integer"
              },
              "to": {
                "type": "integer"
              },
              "total": {
                "type": "integer"
              }
            }
            }
      }
    }
    }
},
  "externalDocs": {
    "description": "Find out more about Mailerlite APIs",
    "url": "https://developers.mailerlite.com/docs"
  }
}
